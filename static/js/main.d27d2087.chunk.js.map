{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card_list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","person","id","name","email","CardList","map","element","SearchBox","placeholder","handlechange","type","onChange","App","state","search_text","title","fetch","then","response","json","user","setState","filter_text","this","filter","monster","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAIaA,EAAM,SAAAC,GAAK,OACpB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0B,EAAEH,EAAMI,OAAOC,GAAzC,4BACtB,6BAAKL,EAAMI,OAAOE,OAClB,4BAAIN,EAAMI,OAAOG,YCHRC,EAAS,SAAAR,GACnB,OAAQ,qBAAKC,UAAU,YAAf,SACPD,EAAMM,KAAKG,KAAI,SAAAC,GAAO,OACpB,cAAC,EAAD,CAAuBN,OAAQM,GAApBA,EAAQL,UCJZM,G,MAAU,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aACjC,OACA,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC8BjEG,E,kDA1Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXb,OAAQ,GACRc,YAAY,GACZC,MAAM,IALI,E,qDAQd,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAI,OAAE,EAAKC,SAAS,CAACrB,OAAOoB,S,oBAGpC,WAAU,IAAD,OACDE,EAAYC,KAAKV,MAAMb,OAAOwB,QAAO,SAAAC,GAAO,OAAEA,EAAQvB,KAAKwB,cAAcC,SAAS,EAAKd,MAAMC,YAAYY,kBAC/G,OACE,sBAAK7B,UAAU,MAAf,UACA,oBAAIA,UAAU,WAAd,6BACF,cAAC,EAAD,CAAWW,YAAY,iBAAkBC,aAAc,SAAAmB,GAAC,OAAE,EAAKP,SAAS,CAACP,YAAYc,EAAEC,OAAOC,WAE5F,cAAC,EAAD,CAAU5B,KAAMoB,W,GAtBJS,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d27d2087.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\nexport const Card =props=>(\r\n    <div className='card-container'>\r\n    <img alt='monster' src={`https://robohash.org/${5+props.person.id}?set=set2&size=180x180`} />\r\n    <h1>{props.person.name}</h1>\r\n    <p>{props.person.email}</p>\r\n    </div>\r\n    );\r\n    ","import React from 'react';\r\nimport  './card_list.style.css';\r\nimport {Card} from '../card/card.component';\r\n\r\n\r\nexport const CardList=props=>{\r\n   return (<div className='card-list' >{\r\n    props.name.map(element=>(\r\n      <Card key={element.id} person={element}/>\r\n    ))\r\n  }</div>)\r\n};\r\n","import React from 'react';\r\nimport './search-box.style.css'\r\n\r\n\r\nexport const SearchBox=({placeholder,handlechange})=>{\r\n    return (\r\n    <input className='search' type='search' placeholder={placeholder} onChange={handlechange}/>\r\n    )\r\n}\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Component } from \"react\";\nimport {CardList} from './component/card-list/card_list.component.jsx';\nimport  { SearchBox } from './component/search-box/search-box.component.jsx';\n\n// import { render } from \"react-dom\";\n\n// var flag = true;\nclass App extends Component {\n  constructor() { \n    super();\n    this.state = {\n      person: [],\n      search_text:\"\",\n      title:\"\"\n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=>response.json())\n    .then(user=>this.setState({person:user}))\n  }\n  \n  render() {\n    const filter_text=this.state.person.filter(monster=>monster.name.toLowerCase().includes(this.state.search_text.toLowerCase()));\n    return (\n      <div className=\"App\">\n      <h1 className=\"headding\">Monster Rolodex</h1>\n    <SearchBox placeholder='Search monster'  handlechange={e=>this.setState({search_text:e.target.value})} /> \n      \n      <CardList name={filter_text}/>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}